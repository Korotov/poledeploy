/*!
 * Hover.css (http://ianlunn.github.io/Hover/)
 * Version: 2.2.1
 * Author: Ian Lunn @IanLunn
 * Author URL: http://ianlunn.co.uk/
 * Github: https://github.com/IanLunn/Hover

 * Hover.css Copyright Ian Lunn 2017. Generated with Sass.
 */
/* 2D TRANSITIONS */
/* Grow */
/* Shrink */
/* Pulse */
@keyframes hvr-pulse {
  25% {
    transform: scale(1.1); }
  75% {
    transform: scale(0.9); } }

/* Pulse Grow */
@keyframes hvr-pulse-grow {
  to {
    transform: scale(1.1); } }

/* Pulse Shrink */
@keyframes hvr-pulse-shrink {
  to {
    transform: scale(0.9); } }

/* Push */
@keyframes hvr-push {
  50% {
    transform: scale(0.8); }
  100% {
    transform: scale(1); } }

/* Pop */
@keyframes hvr-pop {
  50% {
    transform: scale(1.2); } }

/* Bounce In */
/* Bounce Out */
/* Rotate */
/* Grow Rotate */
/* Float */
/* Sink */
/* Bob */
@keyframes hvr-bob {
  0% {
    transform: translateY(-8px); }
  50% {
    transform: translateY(-4px); }
  100% {
    transform: translateY(-8px); } }

@keyframes hvr-bob-float {
  100% {
    transform: translateY(-8px); } }

/* Hang */
@keyframes hvr-hang {
  0% {
    transform: translateY(8px); }
  50% {
    transform: translateY(4px); }
  100% {
    transform: translateY(8px); } }

@keyframes hvr-hang-sink {
  100% {
    transform: translateY(8px); } }

/* Skew */
/* Skew Forward */
/* Skew Backward */
/* Wobble Vertical */
@keyframes hvr-wobble-vertical {
  16.65% {
    transform: translateY(8px); }
  33.3% {
    transform: translateY(-6px); }
  49.95% {
    transform: translateY(4px); }
  66.6% {
    transform: translateY(-2px); }
  83.25% {
    transform: translateY(1px); }
  100% {
    transform: translateY(0); } }

/* Wobble Horizontal */
@keyframes hvr-wobble-horizontal {
  16.65% {
    transform: translateX(8px); }
  33.3% {
    transform: translateX(-6px); }
  49.95% {
    transform: translateX(4px); }
  66.6% {
    transform: translateX(-2px); }
  83.25% {
    transform: translateX(1px); }
  100% {
    transform: translateX(0); } }

/* Wobble To Bottom Right */
@keyframes hvr-wobble-to-bottom-right {
  16.65% {
    transform: translate(8px, 8px); }
  33.3% {
    transform: translate(-6px, -6px); }
  49.95% {
    transform: translate(4px, 4px); }
  66.6% {
    transform: translate(-2px, -2px); }
  83.25% {
    transform: translate(1px, 1px); }
  100% {
    transform: translate(0, 0); } }

/* Wobble To Top Right */
@keyframes hvr-wobble-to-top-right {
  16.65% {
    transform: translate(8px, -8px); }
  33.3% {
    transform: translate(-6px, 6px); }
  49.95% {
    transform: translate(4px, -4px); }
  66.6% {
    transform: translate(-2px, 2px); }
  83.25% {
    transform: translate(1px, -1px); }
  100% {
    transform: translate(0, 0); } }

/* Wobble Top */
@keyframes hvr-wobble-top {
  16.65% {
    transform: skew(-12deg); }
  33.3% {
    transform: skew(10deg); }
  49.95% {
    transform: skew(-6deg); }
  66.6% {
    transform: skew(4deg); }
  83.25% {
    transform: skew(-2deg); }
  100% {
    transform: skew(0); } }

/* Wobble Bottom */
@keyframes hvr-wobble-bottom {
  16.65% {
    transform: skew(-12deg); }
  33.3% {
    transform: skew(10deg); }
  49.95% {
    transform: skew(-6deg); }
  66.6% {
    transform: skew(4deg); }
  83.25% {
    transform: skew(-2deg); }
  100% {
    transform: skew(0); } }

/* Wobble Skew */
@keyframes hvr-wobble-skew {
  16.65% {
    transform: skew(-12deg); }
  33.3% {
    transform: skew(10deg); }
  49.95% {
    transform: skew(-6deg); }
  66.6% {
    transform: skew(4deg); }
  83.25% {
    transform: skew(-2deg); }
  100% {
    transform: skew(0); } }

/* Buzz */
@keyframes hvr-buzz {
  50% {
    transform: translateX(3px) rotate(2deg); }
  100% {
    transform: translateX(-3px) rotate(-2deg); } }

/* Buzz Out */
@keyframes hvr-buzz-out {
  10% {
    transform: translateX(3px) rotate(2deg); }
  20% {
    transform: translateX(-3px) rotate(-2deg); }
  30% {
    transform: translateX(3px) rotate(2deg); }
  40% {
    transform: translateX(-3px) rotate(-2deg); }
  50% {
    transform: translateX(2px) rotate(1deg); }
  60% {
    transform: translateX(-2px) rotate(-1deg); }
  70% {
    transform: translateX(2px) rotate(1deg); }
  80% {
    transform: translateX(-2px) rotate(-1deg); }
  90% {
    transform: translateX(1px) rotate(0); }
  100% {
    transform: translateX(-1px) rotate(0); } }

/* Forward */
/* Backward */
/* BACKGROUND TRANSITIONS */
/* Fade */
/* Back Pulse */
@keyframes hvr-back-pulse {
  50% {
    background-color: rgba(32, 152, 209, 0.75); } }

/* Sweep To Right */
/* Sweep To Left */
/* Sweep To Bottom */
/* Sweep To Top */
/* Bounce To Right */
/* Bounce To Left */
/* Bounce To Bottom */
/* Bounce To Top */
/* Radial Out */
/* Radial In */
/* Rectangle In */
/* Rectangle Out */
/* Shutter In Horizontal */
/* Shutter Out Horizontal */
/* Shutter In Vertical */
/* Shutter Out Vertical */
/* BORDER TRANSITIONS */
/* Border Fade */
/* Hollow */
/* Trim */
/* Ripple Out */
@keyframes hvr-ripple-out {
  100% {
    top: -12px;
    right: -12px;
    bottom: -12px;
    left: -12px;
    opacity: 0; } }

/* Ripple In */
@keyframes hvr-ripple-in {
  100% {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    opacity: 1; } }

/* Outline Out */
/* Outline In */
/* Round Corners */
/* Underline From Left */
/* Underline From Center */
/* Underline From Right */
/* Overline From Left */
/* Overline From Center */
/* Overline From Right */
/* Reveal */
/* Underline Reveal */
/* Overline Reveal */
/* SHADOW/GLOW TRANSITIONS */
/* Glow */
/* Shadow */
/* Grow Shadow */
/* Box Shadow Outset */
/* Box Shadow Inset */
/* Float Shadow */
/* Shadow Radial */
/* SPEECH BUBBLES */
/* Bubble Top */
/* Bubble Right */
/* Bubble Bottom */
/* Bubble Left */
/* Bubble Float Top */
/* Bubble Float Right */
/* Bubble Float Bottom */
/* Bubble Float Left */
/* ICONS */
/* Icon Back */
/* Icon Forward */
/* Icon Down */
@keyframes hvr-icon-down {
  0%,
  50%,
  100% {
    transform: translateY(0); }
  25%,
  75% {
    transform: translateY(6px); } }

/* Icon Down */
/* Icon Up */
@keyframes hvr-icon-up {
  0%,
  50%,
  100% {
    transform: translateY(0); }
  25%,
  75% {
    transform: translateY(-6px); } }

/* Icon Up */
/* Icon Spin */
/* Icon Drop */
@keyframes hvr-icon-drop {
  0% {
    opacity: 0; }
  50% {
    opacity: 0;
    transform: translateY(-100%); }
  51%,
  100% {
    opacity: 1; } }

/* Icon Drop */
/* Icon Fade */
/* Icon Float Away */
@keyframes hvr-icon-float-away {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    transform: translateY(-1em); } }

/* Icon Float Away */
/* Icon Sink Away */
@keyframes hvr-icon-sink-away {
  0% {
    opacity: 1; }
  100% {
    opacity: 0;
    transform: translateY(1em); } }

/* Icon Sink Away */
/* Icon Grow */
/* Icon Shrink */
/* Icon Pulse */
@keyframes hvr-icon-pulse {
  25% {
    transform: scale(1.3); }
  75% {
    transform: scale(0.8); } }

/* Icon Pulse Grow */
@keyframes hvr-icon-pulse-grow {
  to {
    transform: scale(1.3); } }

/* Icon Pulse Shrink */
@keyframes hvr-icon-pulse-shrink {
  to {
    transform: scale(0.8); } }

/* Icon Push */
@keyframes hvr-icon-push {
  50% {
    transform: scale(0.5); } }

/* Icon Pop */
@keyframes hvr-icon-pop {
  50% {
    transform: scale(1.5); } }

/* Icon Bounce */
/* Icon Rotate */
/* Icon Grow Rotate */
/* Icon Float */
/* Icon Sink */
/* Icon Bob */
@keyframes hvr-icon-bob {
  0% {
    transform: translateY(-6px); }
  50% {
    transform: translateY(-2px); }
  100% {
    transform: translateY(-6px); } }

@keyframes hvr-icon-bob-float {
  100% {
    transform: translateY(-6px); } }

/* Icon Hang */
@keyframes hvr-icon-hang {
  0% {
    transform: translateY(6px); }
  50% {
    transform: translateY(2px); }
  100% {
    transform: translateY(6px); } }

@keyframes hvr-icon-hang-sink {
  100% {
    transform: translateY(6px); } }

/* Icon Wobble Horizontal */
@keyframes hvr-icon-wobble-horizontal {
  16.65% {
    transform: translateX(6px); }
  33.3% {
    transform: translateX(-5px); }
  49.95% {
    transform: translateX(4px); }
  66.6% {
    transform: translateX(-2px); }
  83.25% {
    transform: translateX(1px); }
  100% {
    transform: translateX(0); } }

/* Icon Wobble Vertical */
@keyframes hvr-icon-wobble-vertical {
  16.65% {
    transform: translateY(6px); }
  33.3% {
    transform: translateY(-5px); }
  49.95% {
    transform: translateY(4px); }
  66.6% {
    transform: translateY(-2px); }
  83.25% {
    transform: translateY(1px); }
  100% {
    transform: translateY(0); } }

/* Icon Buzz */
@keyframes hvr-icon-buzz {
  50% {
    transform: translateX(3px) rotate(2deg); }
  100% {
    transform: translateX(-3px) rotate(-2deg); } }

/* Icon Buzz Out */
@keyframes hvr-icon-buzz-out {
  10% {
    transform: translateX(3px) rotate(2deg); }
  20% {
    transform: translateX(-3px) rotate(-2deg); }
  30% {
    transform: translateX(3px) rotate(2deg); }
  40% {
    transform: translateX(-3px) rotate(-2deg); }
  50% {
    transform: translateX(2px) rotate(1deg); }
  60% {
    transform: translateX(-2px) rotate(-1deg); }
  70% {
    transform: translateX(2px) rotate(1deg); }
  80% {
    transform: translateX(-2px) rotate(-1deg); }
  90% {
    transform: translateX(1px) rotate(0); }
  100% {
    transform: translateX(-1px) rotate(0); } }

/* CURLS */
/* Curl Top Left */
/* Curl Top Right */
/* Curl Bottom Right */
/* Curl Bottom Left */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
